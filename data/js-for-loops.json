{
  "name": "2024-5-25-19-13-35-JavaScript for loops",
  "data": [
    {
      "prob_id": 1,
      "prob_type": 1,
      "prob_name": "forloops----Get the length",
      "prob_problem": "function getLengthOfWords(words) {\r    const outArr = [];\r\n    for (const temp of words) {\r\n        outArr.push(temp.length);\r\n    }\r\n\r\n    return outArr;\r\n}",
      "prob_args": [
        "red",
        "orange",
        "yellow",
        "green",
        "blue",
        "indigo",
        "violet"
      ],
      "prob_solution": [
        3,
        6,
        6,
        5,
        4,
        6,
        6
      ],
      "prob_resultType": "array",
      "prob_instructions": [
        "for...js-for-loops.jsonOf Loop - get length of each word. Return a number \"array\""
      ],
      "prob_hints": [
        "Syntax: for (item of itemList {",
        "The for...of loop is a more modern and concise way to iterate over the elements of an array. It's particularly useful when you don't need to know the index of the current element."
      ]
    },
    {
      "prob_id": 2,
      "prob_type": 1,
      "prob_name": "Add five",
      "prob_problem": "function addFiveToNumbers(numbers) {\r    const outArr = [];\r\n    for (let i = 0; i < numbers.length; i++) {\r\n        outArr.push(numbers[i] + 5)\r\n    }\r\n    return outArr;\r\n}",
      "prob_args": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "prob_solution": [
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15
      ],
      "prob_resultType": "array",
      "prob_instructions": [
        "For Loop - add 5 to each number in the **numbers array**. Return an **array** with new values"
      ],
      "prob_hints": [
        "Syntax: for (initialization; condition; iteration) {",
        "The traditional for loop is useful when you know the exact number of iterations you need to perform. It's straightforward and easy to understand."
      ]
    },
    {
      "prob_id": 3,
      "prob_type": 1,
      "prob_name": "Sum of Numbers",
      "prob_problem": "function sumOfNumbers(numbers) {\r    let sum = 0;\r\n    for (let i = 0; i < numbers.length; i++) {\r\n        sum += numbers[i];\r\n    }\r\n    return sum;\r\n}",
      "prob_args": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "prob_solution": 55,
      "prob_resultType": "number",
      "prob_instructions": [
        "For loop. Take the values in **numbers array** and add them up. Return sum result."
      ],
      "prob_hints": [
        "Syntax: for (initialization; condition; iteration) {"
      ]
    },
    {
      "prob_id": 4,
      "prob_type": 1,
      "prob_name": "Finding the Largest Number",
      "prob_problem": "function findLargestNumber(numbers) {\r    let largest = numbers[0];\r\n    for (let i = 1; i < numbers.length; i++) {\r\n        if (numbers[i] > largest) {\r\n            largest = numbers[i];\r\n        }\r\n    }\r\n    return largest;\r\n}",
      "prob_args": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "prob_solution": 10,
      "prob_resultType": "number",
      "prob_instructions": [
        "Use For loop - Finds the largest number in an array of **numbers**.",
        "return: The largest number in the array."
      ],
      "prob_hints": [
        "Syntax: for (initialization; condition; iteration) {"
      ]
    },
    {
      "prob_id": 5,
      "prob_type": 1,
      "prob_name": "Counting Characters",
      "prob_problem": "function countCharacters(string) {\r    let charCount = {};\r\n    for (let i = 0; i < string.length; i++) {\r\n        let char = string[i];\r\n        if (charCount[char]) {\r\n            charCount[char]++;\r\n        } else {\r\n            charCount[char] = 1;\r\n        }\r\n    }\r\n    return charCount;\r\n}",
      "prob_args": "hello world",
      "prob_solution": {
        "h": 1,
        "e": 1,
        "l": 3,
        "o": 2,
        " ": 1,
        "w": 1,
        "r": 1,
        "d": 1
      },
      "prob_resultType": "object",
      "prob_instructions": [
        "Counts the occurrences of each character in a given **string**.",
        "return: An object where each key is a unique character found in the input string, and each value is the count of that character.",
        "with for..off it gets even smaller"
      ],
      "prob_hints": [
        "Syntax: for (initialization; condition; iteration) {"
      ]
    },
    {
      "prob_id": 6,
      "prob_type": 1,
      "prob_name": "Change to Uppercase",
      "prob_problem": "function changeAllToUppercase(words) {\r    const outArr = []\r\n    words.forEach(item => {\r\n        outArr.push(item.toUpperCase())\r\n    });\r\n\r\n    return outArr;\r\n}",
      "prob_args": [
        "red",
        "orange",
        "yellow",
        "green",
        "blue",
        "indigo",
        "violet"
      ],
      "prob_solution": [
        "RED",
        "ORANGE",
        "YELLOW",
        "GREEN",
        "BLUE",
        "INDIGO",
        "VIOLET"
      ],
      "prob_resultType": "array",
      "prob_instructions": [
        "ForEach Loop - Converts all **words** in an array to uppercase.",
        "return: An array of strings where all characters are converted to uppercase."
      ],
      "prob_hints": [
        "Syntax: array.forEach(function(currentValue, index, arr), thisValue)",
        "The forEach method is a higher-order function provided by JavaScript arrays. It executes a provided function once for each array element. It's a good choice when you want to perform an operation on each element of the array without needing to know the index."
      ]
    }
  ]
}